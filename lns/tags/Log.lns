_lune_control default_async_all;
_lune_control default_strict_generics;

pub enum Level {
   Fatal,
   Err,
   Warn,
   Log,
   Info,
   Debug,
   Trace,
}

let mut name2levelMap:&Map<str,Level> = {
   "fatal": .Fatal,
   "error": .Err,
   "warn": .Warn,
   "log": .Log,
   "info": .Info,
   "debug": .Debug,
   "trace": .Trace,
};

pub fn str2level( txt:str ) : Level! {
   return name2levelMap[ txt ];
}

let mut outputLevel = Level.Warn;
pub fn setLevel( level:Level ) {
   outputLevel = level;
}

let mut detail = true;
pub fn enableDetail( flag:bool ) {
   detail = flag;
}


pub form CreateMessage() __trans: str;


pub fn log( level:Level, funcName:str, lineNo:int, callback: CreateMessage ) {
   let logStream:oStream = io.stderr;
   if level <= outputLevel {
      if detail {
         let nowClock = os.clock();
         logStream.write(
            "%6d:%s:%s:%d:" (( nowClock * 1000 )@@int,
                              level.$_txt, funcName, lineNo) );
      } else {
         logStream.write( "%s:%s:" (level.$_txt, funcName) );
      }
      logStream.write( callback() );
      logStream.write( "\n" );
   }
}

pub macro _log( level:Level, mess : __exp ) {
   Log.log( ,,level, __func__, __line__, fn () __trans:str { return ,,mess; } );
}
