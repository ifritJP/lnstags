// -*- coding: utf-8 -*-

_lune_control default_async_all;
_lune_control default_strict_generics;

import go/github:com.ifritJP.LuneScript.src.lune.base.Option as LuneOpt;
import go/github:com.ifritJP.LuneScript.src.lune.base.Types;
import go/github:com.ifritJP.LuneScript.src.lune.base.Parser;
import go/github:com.ifritJP.LuneScript.src.lune.base.front;
import go/github:com.ifritJP.LuneScript.src.lune.base.Nodes;
import go/github:com.ifritJP.LuneScript.src.lune.base.Ast as LuneAst;
import go/github:com.ifritJP.LuneScript.src.lune.base.LuaVer;
import go/github:com.ifritJP.LuneScript.src.lune.base.Log as LuneLog;
import go/github:com.ifritJP.LuneScript.src.lune.base.Util as LuneUtil;

pub fn getFullNameSym<T>( filter:&Nodes.Filter<T>, symbolInfo:&LuneAst.SymbolInfo ) : str {
   if symbolInfo.$namespaceTypeInfo == LuneAst.headTypeInfo {
      return symbolInfo.$name;
   }
   let name = "%s.%s"
       ( filter.getFull( symbolInfo.$namespaceTypeInfo, false ), symbolInfo.$name );
   return name;
}

pub fn buildAst(
   logLevel:LuneLog.Level, pathList:&List<str>, projDir:str!,
   stdinFile:&Types.StdinFile!, forceAll:bool,
   transCtrlInfo:&Types.TransCtrlInfo, astCallback:front.AstCallback ) __noasync
{
   if #pathList == 0 {
      return;
   }
   
   LuneLog.setLevel( logLevel );
   LuneUtil.setDebugFlag( false );

   let mut lnsOpt = LuneOpt.createDefaultOption( pathList, projDir );
   lnsOpt.set_stdinFile( stdinFile );
   // ver 51, 52 では構文エラーになるケースがあるので、
   // ここでは 53 として処理する。
   // 本来はオプション指定した方が良いかも。
   lnsOpt.targetLuaVer = LuaVer.ver53;
   lnsOpt.transCtrlInfo.legacyMutableControl = transCtrlInfo.legacyMutableControl;
   // .meta があったときでも ast 解析するように .Force 設定
   if forceAll {
      lnsOpt.transCtrlInfo.uptodateMode = .ForceAll;
   } else {
      lnsOpt.transCtrlInfo.uptodateMode = .Force1(
         LuneUtil.scriptPath2Module( pathList[ 1 ] ) );
   }
      
   front.build( lnsOpt, astCallback );
}
