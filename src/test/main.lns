subfile use mainSub;

import Sub;
Sub.func();
let hoge = new Sub.Hoge();
let ifObj:Sub.IF = hoge;
hoge.func( .Val1 );
ifObj.func( Sub.Foo.Val1 );
Sub.Hoge.sub( .Val2 );
let hogehoge = new Sub.HogeHoge();
hogehoge.func( .Val2 );

macro _Macro() {
   Sub.func();
}
_Macro();
print( Sub.Val );
print( hoge.$val );
{
   let mut hoge2 = new Sub.Hoge();
   hoge2.set_val( 0 );
}
{
   macro _Macro2() {
      {
         let stmt = `{ Sub.func(); };
      }
      ,,stmt;
   }
   _Macro2();
}
{
   let mut sub:Sub.Sub = new Sub.SubSub( 1 );
   sub.set_val( sub.$val );
}
{
   Sub._Hoge();
   Sub._Hoge2( `{print("hoge");} );
}
{
   let val = new Sub.FooBar();
   print( val.$val );
}
{
   fn getForm() : Sub.Form {
      return fn() {};
   }
   getForm();
}
{
   alge Al {
      Val(Sub.Bar, aaa:Sub.Foo),
   }
}
{
   let hoge2 = new Sub.Hoge();
   print( hoge2.val );
}
{
   macro _Stat() {
      {
         let mut list:List<stat> = [];
         let mut subcaseList:List<stat> = [];
         subcaseList.insert( `{
            print( "hoge:" );
         });
         let className = "AAA";
         list.insert( `{ 
            fn ,,,"process_%s" (className) ~~ () {
               ,,subcaseList
            }} );
         
      }
      ,,list;
   }
   _Stat();
}
